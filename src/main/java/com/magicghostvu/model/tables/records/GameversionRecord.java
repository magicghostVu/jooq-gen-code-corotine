/*
 * This file is generated by jOOQ.
 */
package com.magicghostvu.model.tables.records;


import com.magicghostvu.model.enums.Gameversionstatus;
import com.magicghostvu.model.tables.Gameversion;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameversionRecord extends TableRecordImpl<GameversionRecord> implements Record5<Integer, Long, Gameversionstatus, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.GameVersion.id</code>.
     */
    public GameversionRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.GameVersion.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.GameVersion.gameId</code>.
     */
    public GameversionRecord setGameid(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.GameVersion.gameId</code>.
     */
    public Long getGameid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.GameVersion.status</code>.
     */
    public GameversionRecord setStatus(Gameversionstatus value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.GameVersion.status</code>.
     */
    public Gameversionstatus getStatus() {
        return (Gameversionstatus) get(2);
    }

    /**
     * Setter for <code>public.GameVersion.createdTime</code>.
     */
    public GameversionRecord setCreatedtime(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.GameVersion.createdTime</code>.
     */
    public Long getCreatedtime() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.GameVersion.unique</code>.
     */
    public GameversionRecord setUnique(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.GameVersion.unique</code>.
     */
    public Long getUnique() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Long, Gameversionstatus, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Long, Gameversionstatus, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Gameversion.GAMEVERSION.ID;
    }

    @Override
    public Field<Long> field2() {
        return Gameversion.GAMEVERSION.GAMEID;
    }

    @Override
    public Field<Gameversionstatus> field3() {
        return Gameversion.GAMEVERSION.STATUS;
    }

    @Override
    public Field<Long> field4() {
        return Gameversion.GAMEVERSION.CREATEDTIME;
    }

    @Override
    public Field<Long> field5() {
        return Gameversion.GAMEVERSION.UNIQUE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getGameid();
    }

    @Override
    public Gameversionstatus component3() {
        return getStatus();
    }

    @Override
    public Long component4() {
        return getCreatedtime();
    }

    @Override
    public Long component5() {
        return getUnique();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getGameid();
    }

    @Override
    public Gameversionstatus value3() {
        return getStatus();
    }

    @Override
    public Long value4() {
        return getCreatedtime();
    }

    @Override
    public Long value5() {
        return getUnique();
    }

    @Override
    public GameversionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public GameversionRecord value2(Long value) {
        setGameid(value);
        return this;
    }

    @Override
    public GameversionRecord value3(Gameversionstatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public GameversionRecord value4(Long value) {
        setCreatedtime(value);
        return this;
    }

    @Override
    public GameversionRecord value5(Long value) {
        setUnique(value);
        return this;
    }

    @Override
    public GameversionRecord values(Integer value1, Long value2, Gameversionstatus value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameversionRecord
     */
    public GameversionRecord() {
        super(Gameversion.GAMEVERSION);
    }

    /**
     * Create a detached, initialised GameversionRecord
     */
    public GameversionRecord(Integer id, Long gameid, Gameversionstatus status, Long createdtime, Long unique) {
        super(Gameversion.GAMEVERSION);

        setId(id);
        setGameid(gameid);
        setStatus(status);
        setCreatedtime(createdtime);
        setUnique(unique);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised GameversionRecord
     */
    public GameversionRecord(com.magicghostvu.model.tables.pojos.Gameversion value) {
        super(Gameversion.GAMEVERSION);

        if (value != null) {
            setId(value.getId());
            setGameid(value.getGameid());
            setStatus(value.getStatus());
            setCreatedtime(value.getCreatedtime());
            setUnique(value.getUnique());
            resetChangedOnNotNull();
        }
    }
}
