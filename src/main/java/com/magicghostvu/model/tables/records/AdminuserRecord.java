/*
 * This file is generated by jOOQ.
 */
package com.magicghostvu.model.tables.records;


import com.magicghostvu.model.tables.Adminuser;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminuserRecord extends UpdatableRecordImpl<AdminuserRecord> implements Record1<String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.AdminUser.domainName</code>.
     */
    public AdminuserRecord setDomainname(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.AdminUser.domainName</code>.
     */
    public String getDomainname() {
        return (String) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<String> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<String> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Adminuser.ADMINUSER.DOMAINNAME;
    }

    @Override
    public String component1() {
        return getDomainname();
    }

    @Override
    public String value1() {
        return getDomainname();
    }

    @Override
    public AdminuserRecord value1(String value) {
        setDomainname(value);
        return this;
    }

    @Override
    public AdminuserRecord values(String value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminuserRecord
     */
    public AdminuserRecord() {
        super(Adminuser.ADMINUSER);
    }

    /**
     * Create a detached, initialised AdminuserRecord
     */
    public AdminuserRecord(String domainname) {
        super(Adminuser.ADMINUSER);

        setDomainname(domainname);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AdminuserRecord
     */
    public AdminuserRecord(com.magicghostvu.model.tables.pojos.Adminuser value) {
        super(Adminuser.ADMINUSER);

        if (value != null) {
            setDomainname(value.getDomainname());
            resetChangedOnNotNull();
        }
    }
}
