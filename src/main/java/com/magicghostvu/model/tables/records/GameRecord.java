/*
 * This file is generated by jOOQ.
 */
package com.magicghostvu.model.tables.records;


import com.magicghostvu.model.enums.Gametype;
import com.magicghostvu.model.tables.Game;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameRecord extends UpdatableRecordImpl<GameRecord> implements Record8<Long, Long, String, Long, Long, Gametype, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.Game.id</code>.
     */
    public GameRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.Game.createTime</code>.
     */
    public GameRecord setCreatetime(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.createTime</code>.
     */
    public Long getCreatetime() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.Game.displayName</code>.
     */
    public GameRecord setDisplayname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.displayName</code>.
     */
    public String getDisplayname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.Game.lastUpdateTime</code>.
     */
    public GameRecord setLastupdatetime(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.lastUpdateTime</code>.
     */
    public Long getLastupdatetime() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.Game.authorId</code>.
     */
    public GameRecord setAuthorid(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.authorId</code>.
     */
    public Long getAuthorid() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.Game.gameType</code>.
     */
    public GameRecord setGametype(Gametype value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.gameType</code>.
     */
    public Gametype getGametype() {
        return (Gametype) get(5);
    }

    /**
     * Setter for <code>public.Game.parentGameId</code>.
     */
    public GameRecord setParentgameid(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.parentGameId</code>.
     */
    public Long getParentgameid() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.Game.description</code>.
     */
    public GameRecord setDescription(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.Game.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, Long, Long, Gametype, Long, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, Long, Long, Gametype, Long, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Game.GAME.ID;
    }

    @Override
    public Field<Long> field2() {
        return Game.GAME.CREATETIME;
    }

    @Override
    public Field<String> field3() {
        return Game.GAME.DISPLAYNAME;
    }

    @Override
    public Field<Long> field4() {
        return Game.GAME.LASTUPDATETIME;
    }

    @Override
    public Field<Long> field5() {
        return Game.GAME.AUTHORID;
    }

    @Override
    public Field<Gametype> field6() {
        return Game.GAME.GAMETYPE;
    }

    @Override
    public Field<Long> field7() {
        return Game.GAME.PARENTGAMEID;
    }

    @Override
    public Field<String> field8() {
        return Game.GAME.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCreatetime();
    }

    @Override
    public String component3() {
        return getDisplayname();
    }

    @Override
    public Long component4() {
        return getLastupdatetime();
    }

    @Override
    public Long component5() {
        return getAuthorid();
    }

    @Override
    public Gametype component6() {
        return getGametype();
    }

    @Override
    public Long component7() {
        return getParentgameid();
    }

    @Override
    public String component8() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCreatetime();
    }

    @Override
    public String value3() {
        return getDisplayname();
    }

    @Override
    public Long value4() {
        return getLastupdatetime();
    }

    @Override
    public Long value5() {
        return getAuthorid();
    }

    @Override
    public Gametype value6() {
        return getGametype();
    }

    @Override
    public Long value7() {
        return getParentgameid();
    }

    @Override
    public String value8() {
        return getDescription();
    }

    @Override
    public GameRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public GameRecord value2(Long value) {
        setCreatetime(value);
        return this;
    }

    @Override
    public GameRecord value3(String value) {
        setDisplayname(value);
        return this;
    }

    @Override
    public GameRecord value4(Long value) {
        setLastupdatetime(value);
        return this;
    }

    @Override
    public GameRecord value5(Long value) {
        setAuthorid(value);
        return this;
    }

    @Override
    public GameRecord value6(Gametype value) {
        setGametype(value);
        return this;
    }

    @Override
    public GameRecord value7(Long value) {
        setParentgameid(value);
        return this;
    }

    @Override
    public GameRecord value8(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public GameRecord values(Long value1, Long value2, String value3, Long value4, Long value5, Gametype value6, Long value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRecord
     */
    public GameRecord() {
        super(Game.GAME);
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(Long id, Long createtime, String displayname, Long lastupdatetime, Long authorid, Gametype gametype, Long parentgameid, String description) {
        super(Game.GAME);

        setId(id);
        setCreatetime(createtime);
        setDisplayname(displayname);
        setLastupdatetime(lastupdatetime);
        setAuthorid(authorid);
        setGametype(gametype);
        setParentgameid(parentgameid);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(com.magicghostvu.model.tables.pojos.Game value) {
        super(Game.GAME);

        if (value != null) {
            setId(value.getId());
            setCreatetime(value.getCreatetime());
            setDisplayname(value.getDisplayname());
            setLastupdatetime(value.getLastupdatetime());
            setAuthorid(value.getAuthorid());
            setGametype(value.getGametype());
            setParentgameid(value.getParentgameid());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
